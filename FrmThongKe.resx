<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnXuatFile.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>