<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSua.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AW11zlgpHekfAAAAAElFTkSuQmCC
</value>
  </data>
</root>