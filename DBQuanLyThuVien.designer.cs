#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyThuVien
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyThuVien")]
	public partial class DBQuanLyThuVienDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDocGia(DocGia instance);
    partial void UpdateDocGia(DocGia instance);
    partial void DeleteDocGia(DocGia instance);
    partial void InsertNhaXuatBan(NhaXuatBan instance);
    partial void UpdateNhaXuatBan(NhaXuatBan instance);
    partial void DeleteNhaXuatBan(NhaXuatBan instance);
    partial void InsertPhieuMuon(PhieuMuon instance);
    partial void UpdatePhieuMuon(PhieuMuon instance);
    partial void DeletePhieuMuon(PhieuMuon instance);
    partial void InsertPhieuTra(PhieuTra instance);
    partial void UpdatePhieuTra(PhieuTra instance);
    partial void DeletePhieuTra(PhieuTra instance);
    partial void InsertQuyDinh(QuyDinh instance);
    partial void UpdateQuyDinh(QuyDinh instance);
    partial void DeleteQuyDinh(QuyDinh instance);
    partial void InsertSach(Sach instance);
    partial void UpdateSach(Sach instance);
    partial void DeleteSach(Sach instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertThe(The instance);
    partial void UpdateThe(The instance);
    partial void DeleteThe(The instance);
    partial void InsertTheLoai(TheLoai instance);
    partial void UpdateTheLoai(TheLoai instance);
    partial void DeleteTheLoai(TheLoai instance);
    partial void InsertThuThu(ThuThu instance);
    partial void UpdateThuThu(ThuThu instance);
    partial void DeleteThuThu(ThuThu instance);
    #endregion
		
		public DBQuanLyThuVienDataContext() : 
				base(global::QuanLyThuVien.Properties.Settings.Default.QuanLyThuVienConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBQuanLyThuVienDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBQuanLyThuVienDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBQuanLyThuVienDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBQuanLyThuVienDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DocGia> DocGias
		{
			get
			{
				return this.GetTable<DocGia>();
			}
		}
		
		public System.Data.Linq.Table<NhaXuatBan> NhaXuatBans
		{
			get
			{
				return this.GetTable<NhaXuatBan>();
			}
		}
		
		public System.Data.Linq.Table<PhieuMuon> PhieuMuons
		{
			get
			{
				return this.GetTable<PhieuMuon>();
			}
		}
		
		public System.Data.Linq.Table<PhieuTra> PhieuTras
		{
			get
			{
				return this.GetTable<PhieuTra>();
			}
		}
		
		public System.Data.Linq.Table<QuyDinh> QuyDinhs
		{
			get
			{
				return this.GetTable<QuyDinh>();
			}
		}
		
		public System.Data.Linq.Table<Sach> Saches
		{
			get
			{
				return this.GetTable<Sach>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<The> Thes
		{
			get
			{
				return this.GetTable<The>();
			}
		}
		
		public System.Data.Linq.Table<TheLoai> TheLoais
		{
			get
			{
				return this.GetTable<TheLoai>();
			}
		}
		
		public System.Data.Linq.Table<ThuThu> ThuThus
		{
			get
			{
				return this.GetTable<ThuThu>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocGia")]
	public partial class DocGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDocGia;
		
		private string _Hoten;
		
		private string _GioiTinh;
		
		private string _DiaChi;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _SoDienThoai;
		
		private EntitySet<PhieuTra> _PhieuTras;
		
		private EntitySet<The> _Thes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDocGiaChanging(int value);
    partial void OnMaDocGiaChanged();
    partial void OnHotenChanging(string value);
    partial void OnHotenChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    #endregion
		
		public DocGia()
		{
			this._PhieuTras = new EntitySet<PhieuTra>(new Action<PhieuTra>(this.attach_PhieuTras), new Action<PhieuTra>(this.detach_PhieuTras));
			this._Thes = new EntitySet<The>(new Action<The>(this.attach_Thes), new Action<The>(this.detach_Thes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDocGia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDocGia
		{
			get
			{
				return this._MaDocGia;
			}
			set
			{
				if ((this._MaDocGia != value))
				{
					this.OnMaDocGiaChanging(value);
					this.SendPropertyChanging();
					this._MaDocGia = value;
					this.SendPropertyChanged("MaDocGia");
					this.OnMaDocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hoten", DbType="NVarChar(255)")]
		public string Hoten
		{
			get
			{
				return this._Hoten;
			}
			set
			{
				if ((this._Hoten != value))
				{
					this.OnHotenChanging(value);
					this.SendPropertyChanging();
					this._Hoten = value;
					this.SendPropertyChanged("Hoten");
					this.OnHotenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(20)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocGia_PhieuTra", Storage="_PhieuTras", ThisKey="MaDocGia", OtherKey="MaDocGia")]
		public EntitySet<PhieuTra> PhieuTras
		{
			get
			{
				return this._PhieuTras;
			}
			set
			{
				this._PhieuTras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocGia_The", Storage="_Thes", ThisKey="MaDocGia", OtherKey="MaDocGia")]
		public EntitySet<The> Thes
		{
			get
			{
				return this._Thes;
			}
			set
			{
				this._Thes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuTras(PhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.DocGia = this;
		}
		
		private void detach_PhieuTras(PhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.DocGia = null;
		}
		
		private void attach_Thes(The entity)
		{
			this.SendPropertyChanging();
			entity.DocGia = this;
		}
		
		private void detach_Thes(The entity)
		{
			this.SendPropertyChanging();
			entity.DocGia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaXuatBan")]
	public partial class NhaXuatBan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNXB;
		
		private string _TenNXB;
		
		private string _DiaChi;
		
		private System.Nullable<System.DateTime> _NgayThanhLap;
		
		private EntitySet<Sach> _Saches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNXBChanging(int value);
    partial void OnMaNXBChanged();
    partial void OnTenNXBChanging(string value);
    partial void OnTenNXBChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnNgayThanhLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThanhLapChanged();
    #endregion
		
		public NhaXuatBan()
		{
			this._Saches = new EntitySet<Sach>(new Action<Sach>(this.attach_Saches), new Action<Sach>(this.detach_Saches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNXB", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNXB
		{
			get
			{
				return this._MaNXB;
			}
			set
			{
				if ((this._MaNXB != value))
				{
					this.OnMaNXBChanging(value);
					this.SendPropertyChanging();
					this._MaNXB = value;
					this.SendPropertyChanged("MaNXB");
					this.OnMaNXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNXB", DbType="NVarChar(50)")]
		public string TenNXB
		{
			get
			{
				return this._TenNXB;
			}
			set
			{
				if ((this._TenNXB != value))
				{
					this.OnTenNXBChanging(value);
					this.SendPropertyChanging();
					this._TenNXB = value;
					this.SendPropertyChanged("TenNXB");
					this.OnTenNXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThanhLap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayThanhLap
		{
			get
			{
				return this._NgayThanhLap;
			}
			set
			{
				if ((this._NgayThanhLap != value))
				{
					this.OnNgayThanhLapChanging(value);
					this.SendPropertyChanging();
					this._NgayThanhLap = value;
					this.SendPropertyChanged("NgayThanhLap");
					this.OnNgayThanhLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaXuatBan_Sach", Storage="_Saches", ThisKey="MaNXB", OtherKey="MaNXB")]
		public EntitySet<Sach> Saches
		{
			get
			{
				return this._Saches;
			}
			set
			{
				this._Saches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Saches(Sach entity)
		{
			this.SendPropertyChanging();
			entity.NhaXuatBan = this;
		}
		
		private void detach_Saches(Sach entity)
		{
			this.SendPropertyChanging();
			entity.NhaXuatBan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuMuon")]
	public partial class PhieuMuon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhieuMuon;
		
		private System.Nullable<int> _MaSach;
		
		private string _TenSach;
		
		private string _MaThe;
		
		private string _MaTheLoai;
		
		private System.Nullable<System.DateTime> _NgayMuon;
		
		private System.Nullable<System.DateTime> _NgayTra;
		
		private System.Nullable<int> _SoLuongMuon;
		
		private string _MaTT;
		
		private EntityRef<Sach> _Sach;
		
		private EntityRef<The> _The;
		
		private EntityRef<TheLoai> _TheLoai;
		
		private EntityRef<ThuThu> _ThuThu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuMuonChanging(int value);
    partial void OnMaPhieuMuonChanged();
    partial void OnMaSachChanging(System.Nullable<int> value);
    partial void OnMaSachChanged();
    partial void OnTenSachChanging(string value);
    partial void OnTenSachChanged();
    partial void OnMaTheChanging(string value);
    partial void OnMaTheChanged();
    partial void OnMaTheLoaiChanging(string value);
    partial void OnMaTheLoaiChanged();
    partial void OnNgayMuonChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayMuonChanged();
    partial void OnNgayTraChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTraChanged();
    partial void OnSoLuongMuonChanging(System.Nullable<int> value);
    partial void OnSoLuongMuonChanged();
    partial void OnMaTTChanging(string value);
    partial void OnMaTTChanged();
    #endregion
		
		public PhieuMuon()
		{
			this._Sach = default(EntityRef<Sach>);
			this._The = default(EntityRef<The>);
			this._TheLoai = default(EntityRef<TheLoai>);
			this._ThuThu = default(EntityRef<ThuThu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuMuon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPhieuMuon
		{
			get
			{
				return this._MaPhieuMuon;
			}
			set
			{
				if ((this._MaPhieuMuon != value))
				{
					this.OnMaPhieuMuonChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuMuon = value;
					this.SendPropertyChanged("MaPhieuMuon");
					this.OnMaPhieuMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSach", DbType="Int")]
		public System.Nullable<int> MaSach
		{
			get
			{
				return this._MaSach;
			}
			set
			{
				if ((this._MaSach != value))
				{
					if (this._Sach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSachChanging(value);
					this.SendPropertyChanging();
					this._MaSach = value;
					this.SendPropertyChanged("MaSach");
					this.OnMaSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSach", DbType="NVarChar(50)")]
		public string TenSach
		{
			get
			{
				return this._TenSach;
			}
			set
			{
				if ((this._TenSach != value))
				{
					this.OnTenSachChanging(value);
					this.SendPropertyChanging();
					this._TenSach = value;
					this.SendPropertyChanged("TenSach");
					this.OnTenSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", DbType="NVarChar(50)")]
		public string MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					if (this._The.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTheChanging(value);
					this.SendPropertyChanging();
					this._MaThe = value;
					this.SendPropertyChanged("MaThe");
					this.OnMaTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTheLoai", DbType="NVarChar(20)")]
		public string MaTheLoai
		{
			get
			{
				return this._MaTheLoai;
			}
			set
			{
				if ((this._MaTheLoai != value))
				{
					if (this._TheLoai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaTheLoai = value;
					this.SendPropertyChanged("MaTheLoai");
					this.OnMaTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayMuon", DbType="Date")]
		public System.Nullable<System.DateTime> NgayMuon
		{
			get
			{
				return this._NgayMuon;
			}
			set
			{
				if ((this._NgayMuon != value))
				{
					this.OnNgayMuonChanging(value);
					this.SendPropertyChanging();
					this._NgayMuon = value;
					this.SendPropertyChanged("NgayMuon");
					this.OnNgayMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTra", DbType="Date")]
		public System.Nullable<System.DateTime> NgayTra
		{
			get
			{
				return this._NgayTra;
			}
			set
			{
				if ((this._NgayTra != value))
				{
					this.OnNgayTraChanging(value);
					this.SendPropertyChanging();
					this._NgayTra = value;
					this.SendPropertyChanged("NgayTra");
					this.OnNgayTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongMuon", DbType="Int")]
		public System.Nullable<int> SoLuongMuon
		{
			get
			{
				return this._SoLuongMuon;
			}
			set
			{
				if ((this._SoLuongMuon != value))
				{
					this.OnSoLuongMuonChanging(value);
					this.SendPropertyChanging();
					this._SoLuongMuon = value;
					this.SendPropertyChanged("SoLuongMuon");
					this.OnSoLuongMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTT", DbType="NVarChar(30)")]
		public string MaTT
		{
			get
			{
				return this._MaTT;
			}
			set
			{
				if ((this._MaTT != value))
				{
					if (this._ThuThu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTTChanging(value);
					this.SendPropertyChanging();
					this._MaTT = value;
					this.SendPropertyChanged("MaTT");
					this.OnMaTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sach_PhieuMuon", Storage="_Sach", ThisKey="MaSach", OtherKey="MaSach", IsForeignKey=true, DeleteRule="CASCADE")]
		public Sach Sach
		{
			get
			{
				return this._Sach.Entity;
			}
			set
			{
				Sach previousValue = this._Sach.Entity;
				if (((previousValue != value) 
							|| (this._Sach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sach.Entity = null;
						previousValue.PhieuMuons.Remove(this);
					}
					this._Sach.Entity = value;
					if ((value != null))
					{
						value.PhieuMuons.Add(this);
						this._MaSach = value.MaSach;
					}
					else
					{
						this._MaSach = default(Nullable<int>);
					}
					this.SendPropertyChanged("Sach");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="The_PhieuMuon", Storage="_The", ThisKey="MaThe", OtherKey="MaThe", IsForeignKey=true)]
		public The The
		{
			get
			{
				return this._The.Entity;
			}
			set
			{
				The previousValue = this._The.Entity;
				if (((previousValue != value) 
							|| (this._The.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._The.Entity = null;
						previousValue.PhieuMuons.Remove(this);
					}
					this._The.Entity = value;
					if ((value != null))
					{
						value.PhieuMuons.Add(this);
						this._MaThe = value.MaThe;
					}
					else
					{
						this._MaThe = default(string);
					}
					this.SendPropertyChanged("The");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_PhieuMuon", Storage="_TheLoai", ThisKey="MaTheLoai", OtherKey="MaTheLoai", IsForeignKey=true)]
		public TheLoai TheLoai
		{
			get
			{
				return this._TheLoai.Entity;
			}
			set
			{
				TheLoai previousValue = this._TheLoai.Entity;
				if (((previousValue != value) 
							|| (this._TheLoai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheLoai.Entity = null;
						previousValue.PhieuMuons.Remove(this);
					}
					this._TheLoai.Entity = value;
					if ((value != null))
					{
						value.PhieuMuons.Add(this);
						this._MaTheLoai = value.MaTheLoai;
					}
					else
					{
						this._MaTheLoai = default(string);
					}
					this.SendPropertyChanged("TheLoai");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuThu_PhieuMuon", Storage="_ThuThu", ThisKey="MaTT", OtherKey="MaTT", IsForeignKey=true, DeleteRule="CASCADE")]
		public ThuThu ThuThu
		{
			get
			{
				return this._ThuThu.Entity;
			}
			set
			{
				ThuThu previousValue = this._ThuThu.Entity;
				if (((previousValue != value) 
							|| (this._ThuThu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThuThu.Entity = null;
						previousValue.PhieuMuons.Remove(this);
					}
					this._ThuThu.Entity = value;
					if ((value != null))
					{
						value.PhieuMuons.Add(this);
						this._MaTT = value.MaTT;
					}
					else
					{
						this._MaTT = default(string);
					}
					this.SendPropertyChanged("ThuThu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuTra")]
	public partial class PhieuTra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPhieuTra;
		
		private System.Nullable<int> _MaDocGia;
		
		private string _MaThe;
		
		private System.Nullable<int> _MaSach;
		
		private System.Nullable<int> _SoLuongMuon;
		
		private System.Nullable<int> _SoLuongTra;
		
		private System.Nullable<System.DateTime> _NgayTra;
		
		private string _TinhTrangSach;
		
		private string _MaTT;
		
		private EntityRef<DocGia> _DocGia;
		
		private EntityRef<Sach> _Sach;
		
		private EntityRef<The> _The;
		
		private EntityRef<ThuThu> _ThuThu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhieuTraChanging(int value);
    partial void OnMaPhieuTraChanged();
    partial void OnMaDocGiaChanging(System.Nullable<int> value);
    partial void OnMaDocGiaChanged();
    partial void OnMaTheChanging(string value);
    partial void OnMaTheChanged();
    partial void OnMaSachChanging(System.Nullable<int> value);
    partial void OnMaSachChanged();
    partial void OnSoLuongMuonChanging(System.Nullable<int> value);
    partial void OnSoLuongMuonChanged();
    partial void OnSoLuongTraChanging(System.Nullable<int> value);
    partial void OnSoLuongTraChanged();
    partial void OnNgayTraChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTraChanged();
    partial void OnTinhTrangSachChanging(string value);
    partial void OnTinhTrangSachChanged();
    partial void OnMaTTChanging(string value);
    partial void OnMaTTChanged();
    #endregion
		
		public PhieuTra()
		{
			this._DocGia = default(EntityRef<DocGia>);
			this._Sach = default(EntityRef<Sach>);
			this._The = default(EntityRef<The>);
			this._ThuThu = default(EntityRef<ThuThu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhieuTra", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPhieuTra
		{
			get
			{
				return this._MaPhieuTra;
			}
			set
			{
				if ((this._MaPhieuTra != value))
				{
					this.OnMaPhieuTraChanging(value);
					this.SendPropertyChanging();
					this._MaPhieuTra = value;
					this.SendPropertyChanged("MaPhieuTra");
					this.OnMaPhieuTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDocGia", DbType="Int")]
		public System.Nullable<int> MaDocGia
		{
			get
			{
				return this._MaDocGia;
			}
			set
			{
				if ((this._MaDocGia != value))
				{
					if (this._DocGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDocGiaChanging(value);
					this.SendPropertyChanging();
					this._MaDocGia = value;
					this.SendPropertyChanged("MaDocGia");
					this.OnMaDocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", DbType="NVarChar(50)")]
		public string MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					if (this._The.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTheChanging(value);
					this.SendPropertyChanging();
					this._MaThe = value;
					this.SendPropertyChanged("MaThe");
					this.OnMaTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSach", DbType="Int")]
		public System.Nullable<int> MaSach
		{
			get
			{
				return this._MaSach;
			}
			set
			{
				if ((this._MaSach != value))
				{
					if (this._Sach.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSachChanging(value);
					this.SendPropertyChanging();
					this._MaSach = value;
					this.SendPropertyChanged("MaSach");
					this.OnMaSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongMuon", DbType="Int")]
		public System.Nullable<int> SoLuongMuon
		{
			get
			{
				return this._SoLuongMuon;
			}
			set
			{
				if ((this._SoLuongMuon != value))
				{
					this.OnSoLuongMuonChanging(value);
					this.SendPropertyChanging();
					this._SoLuongMuon = value;
					this.SendPropertyChanged("SoLuongMuon");
					this.OnSoLuongMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongTra", DbType="Int")]
		public System.Nullable<int> SoLuongTra
		{
			get
			{
				return this._SoLuongTra;
			}
			set
			{
				if ((this._SoLuongTra != value))
				{
					this.OnSoLuongTraChanging(value);
					this.SendPropertyChanging();
					this._SoLuongTra = value;
					this.SendPropertyChanged("SoLuongTra");
					this.OnSoLuongTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTra", DbType="Date")]
		public System.Nullable<System.DateTime> NgayTra
		{
			get
			{
				return this._NgayTra;
			}
			set
			{
				if ((this._NgayTra != value))
				{
					this.OnNgayTraChanging(value);
					this.SendPropertyChanging();
					this._NgayTra = value;
					this.SendPropertyChanged("NgayTra");
					this.OnNgayTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangSach", DbType="NVarChar(10)")]
		public string TinhTrangSach
		{
			get
			{
				return this._TinhTrangSach;
			}
			set
			{
				if ((this._TinhTrangSach != value))
				{
					this.OnTinhTrangSachChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangSach = value;
					this.SendPropertyChanged("TinhTrangSach");
					this.OnTinhTrangSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTT", DbType="NVarChar(30)")]
		public string MaTT
		{
			get
			{
				return this._MaTT;
			}
			set
			{
				if ((this._MaTT != value))
				{
					if (this._ThuThu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTTChanging(value);
					this.SendPropertyChanging();
					this._MaTT = value;
					this.SendPropertyChanged("MaTT");
					this.OnMaTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocGia_PhieuTra", Storage="_DocGia", ThisKey="MaDocGia", OtherKey="MaDocGia", IsForeignKey=true, DeleteRule="CASCADE")]
		public DocGia DocGia
		{
			get
			{
				return this._DocGia.Entity;
			}
			set
			{
				DocGia previousValue = this._DocGia.Entity;
				if (((previousValue != value) 
							|| (this._DocGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocGia.Entity = null;
						previousValue.PhieuTras.Remove(this);
					}
					this._DocGia.Entity = value;
					if ((value != null))
					{
						value.PhieuTras.Add(this);
						this._MaDocGia = value.MaDocGia;
					}
					else
					{
						this._MaDocGia = default(Nullable<int>);
					}
					this.SendPropertyChanged("DocGia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sach_PhieuTra", Storage="_Sach", ThisKey="MaSach", OtherKey="MaSach", IsForeignKey=true, DeleteRule="CASCADE")]
		public Sach Sach
		{
			get
			{
				return this._Sach.Entity;
			}
			set
			{
				Sach previousValue = this._Sach.Entity;
				if (((previousValue != value) 
							|| (this._Sach.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sach.Entity = null;
						previousValue.PhieuTras.Remove(this);
					}
					this._Sach.Entity = value;
					if ((value != null))
					{
						value.PhieuTras.Add(this);
						this._MaSach = value.MaSach;
					}
					else
					{
						this._MaSach = default(Nullable<int>);
					}
					this.SendPropertyChanged("Sach");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="The_PhieuTra", Storage="_The", ThisKey="MaThe", OtherKey="MaThe", IsForeignKey=true)]
		public The The
		{
			get
			{
				return this._The.Entity;
			}
			set
			{
				The previousValue = this._The.Entity;
				if (((previousValue != value) 
							|| (this._The.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._The.Entity = null;
						previousValue.PhieuTras.Remove(this);
					}
					this._The.Entity = value;
					if ((value != null))
					{
						value.PhieuTras.Add(this);
						this._MaThe = value.MaThe;
					}
					else
					{
						this._MaThe = default(string);
					}
					this.SendPropertyChanged("The");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuThu_PhieuTra", Storage="_ThuThu", ThisKey="MaTT", OtherKey="MaTT", IsForeignKey=true, DeleteRule="CASCADE")]
		public ThuThu ThuThu
		{
			get
			{
				return this._ThuThu.Entity;
			}
			set
			{
				ThuThu previousValue = this._ThuThu.Entity;
				if (((previousValue != value) 
							|| (this._ThuThu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThuThu.Entity = null;
						previousValue.PhieuTras.Remove(this);
					}
					this._ThuThu.Entity = value;
					if ((value != null))
					{
						value.PhieuTras.Add(this);
						this._MaTT = value.MaTT;
					}
					else
					{
						this._MaTT = default(string);
					}
					this.SendPropertyChanged("ThuThu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuyDinh")]
	public partial class QuyDinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaQD;
		
		private string _TenQD;
		
		private System.Nullable<int> _SoLuongQD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQDChanging(int value);
    partial void OnMaQDChanged();
    partial void OnTenQDChanging(string value);
    partial void OnTenQDChanged();
    partial void OnSoLuongQDChanging(System.Nullable<int> value);
    partial void OnSoLuongQDChanged();
    #endregion
		
		public QuyDinh()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaQD
		{
			get
			{
				return this._MaQD;
			}
			set
			{
				if ((this._MaQD != value))
				{
					this.OnMaQDChanging(value);
					this.SendPropertyChanging();
					this._MaQD = value;
					this.SendPropertyChanged("MaQD");
					this.OnMaQDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQD", DbType="NVarChar(50)")]
		public string TenQD
		{
			get
			{
				return this._TenQD;
			}
			set
			{
				if ((this._TenQD != value))
				{
					this.OnTenQDChanging(value);
					this.SendPropertyChanging();
					this._TenQD = value;
					this.SendPropertyChanged("TenQD");
					this.OnTenQDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongQD", DbType="Int")]
		public System.Nullable<int> SoLuongQD
		{
			get
			{
				return this._SoLuongQD;
			}
			set
			{
				if ((this._SoLuongQD != value))
				{
					this.OnSoLuongQDChanging(value);
					this.SendPropertyChanging();
					this._SoLuongQD = value;
					this.SendPropertyChanged("SoLuongQD");
					this.OnSoLuongQDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sach")]
	public partial class Sach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSach;
		
		private string _TenSach;
		
		private string _TacGia;
		
		private string _MaTheLoai;
		
		private System.Nullable<int> _MaNXB;
		
		private System.Nullable<int> _DonGia;
		
		private System.Nullable<int> _SoLuongTon;
		
		private System.Nullable<int> _SoLanMuon;
		
		private string _TinhTrang;
		
		private EntitySet<PhieuMuon> _PhieuMuons;
		
		private EntitySet<PhieuTra> _PhieuTras;
		
		private EntityRef<NhaXuatBan> _NhaXuatBan;
		
		private EntityRef<TheLoai> _TheLoai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSachChanging(int value);
    partial void OnMaSachChanged();
    partial void OnTenSachChanging(string value);
    partial void OnTenSachChanged();
    partial void OnTacGiaChanging(string value);
    partial void OnTacGiaChanged();
    partial void OnMaTheLoaiChanging(string value);
    partial void OnMaTheLoaiChanged();
    partial void OnMaNXBChanging(System.Nullable<int> value);
    partial void OnMaNXBChanged();
    partial void OnDonGiaChanging(System.Nullable<int> value);
    partial void OnDonGiaChanged();
    partial void OnSoLuongTonChanging(System.Nullable<int> value);
    partial void OnSoLuongTonChanged();
    partial void OnSoLanMuonChanging(System.Nullable<int> value);
    partial void OnSoLanMuonChanged();
    partial void OnTinhTrangChanging(string value);
    partial void OnTinhTrangChanged();
    #endregion
		
		public Sach()
		{
			this._PhieuMuons = new EntitySet<PhieuMuon>(new Action<PhieuMuon>(this.attach_PhieuMuons), new Action<PhieuMuon>(this.detach_PhieuMuons));
			this._PhieuTras = new EntitySet<PhieuTra>(new Action<PhieuTra>(this.attach_PhieuTras), new Action<PhieuTra>(this.detach_PhieuTras));
			this._NhaXuatBan = default(EntityRef<NhaXuatBan>);
			this._TheLoai = default(EntityRef<TheLoai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSach", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSach
		{
			get
			{
				return this._MaSach;
			}
			set
			{
				if ((this._MaSach != value))
				{
					this.OnMaSachChanging(value);
					this.SendPropertyChanging();
					this._MaSach = value;
					this.SendPropertyChanged("MaSach");
					this.OnMaSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSach", DbType="NVarChar(255)")]
		public string TenSach
		{
			get
			{
				return this._TenSach;
			}
			set
			{
				if ((this._TenSach != value))
				{
					this.OnTenSachChanging(value);
					this.SendPropertyChanging();
					this._TenSach = value;
					this.SendPropertyChanged("TenSach");
					this.OnTenSachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TacGia", DbType="NVarChar(50)")]
		public string TacGia
		{
			get
			{
				return this._TacGia;
			}
			set
			{
				if ((this._TacGia != value))
				{
					this.OnTacGiaChanging(value);
					this.SendPropertyChanging();
					this._TacGia = value;
					this.SendPropertyChanged("TacGia");
					this.OnTacGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTheLoai", DbType="NVarChar(20)")]
		public string MaTheLoai
		{
			get
			{
				return this._MaTheLoai;
			}
			set
			{
				if ((this._MaTheLoai != value))
				{
					if (this._TheLoai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaTheLoai = value;
					this.SendPropertyChanged("MaTheLoai");
					this.OnMaTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNXB", DbType="Int")]
		public System.Nullable<int> MaNXB
		{
			get
			{
				return this._MaNXB;
			}
			set
			{
				if ((this._MaNXB != value))
				{
					if (this._NhaXuatBan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNXBChanging(value);
					this.SendPropertyChanging();
					this._MaNXB = value;
					this.SendPropertyChanged("MaNXB");
					this.OnMaNXBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Int")]
		public System.Nullable<int> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongTon", DbType="Int")]
		public System.Nullable<int> SoLuongTon
		{
			get
			{
				return this._SoLuongTon;
			}
			set
			{
				if ((this._SoLuongTon != value))
				{
					this.OnSoLuongTonChanging(value);
					this.SendPropertyChanging();
					this._SoLuongTon = value;
					this.SendPropertyChanged("SoLuongTon");
					this.OnSoLuongTonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLanMuon", DbType="Int")]
		public System.Nullable<int> SoLanMuon
		{
			get
			{
				return this._SoLanMuon;
			}
			set
			{
				if ((this._SoLanMuon != value))
				{
					this.OnSoLanMuonChanging(value);
					this.SendPropertyChanging();
					this._SoLanMuon = value;
					this.SendPropertyChanged("SoLanMuon");
					this.OnSoLanMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrang", DbType="NVarChar(20)")]
		public string TinhTrang
		{
			get
			{
				return this._TinhTrang;
			}
			set
			{
				if ((this._TinhTrang != value))
				{
					this.OnTinhTrangChanging(value);
					this.SendPropertyChanging();
					this._TinhTrang = value;
					this.SendPropertyChanged("TinhTrang");
					this.OnTinhTrangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sach_PhieuMuon", Storage="_PhieuMuons", ThisKey="MaSach", OtherKey="MaSach")]
		public EntitySet<PhieuMuon> PhieuMuons
		{
			get
			{
				return this._PhieuMuons;
			}
			set
			{
				this._PhieuMuons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sach_PhieuTra", Storage="_PhieuTras", ThisKey="MaSach", OtherKey="MaSach")]
		public EntitySet<PhieuTra> PhieuTras
		{
			get
			{
				return this._PhieuTras;
			}
			set
			{
				this._PhieuTras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaXuatBan_Sach", Storage="_NhaXuatBan", ThisKey="MaNXB", OtherKey="MaNXB", IsForeignKey=true, DeleteRule="CASCADE")]
		public NhaXuatBan NhaXuatBan
		{
			get
			{
				return this._NhaXuatBan.Entity;
			}
			set
			{
				NhaXuatBan previousValue = this._NhaXuatBan.Entity;
				if (((previousValue != value) 
							|| (this._NhaXuatBan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaXuatBan.Entity = null;
						previousValue.Saches.Remove(this);
					}
					this._NhaXuatBan.Entity = value;
					if ((value != null))
					{
						value.Saches.Add(this);
						this._MaNXB = value.MaNXB;
					}
					else
					{
						this._MaNXB = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhaXuatBan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_Sach", Storage="_TheLoai", ThisKey="MaTheLoai", OtherKey="MaTheLoai", IsForeignKey=true, DeleteRule="CASCADE")]
		public TheLoai TheLoai
		{
			get
			{
				return this._TheLoai.Entity;
			}
			set
			{
				TheLoai previousValue = this._TheLoai.Entity;
				if (((previousValue != value) 
							|| (this._TheLoai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheLoai.Entity = null;
						previousValue.Saches.Remove(this);
					}
					this._TheLoai.Entity = value;
					if ((value != null))
					{
						value.Saches.Add(this);
						this._MaTheLoai = value.MaTheLoai;
					}
					else
					{
						this._MaTheLoai = default(string);
					}
					this.SendPropertyChanged("TheLoai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuMuons(PhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.Sach = this;
		}
		
		private void detach_PhieuMuons(PhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.Sach = null;
		}
		
		private void attach_PhieuTras(PhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.Sach = this;
		}
		
		private void detach_PhieuTras(PhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.Sach = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTK;
		
		private string _TK;
		
		private string _MK;
		
		private string _MaTT;
		
		private string _Quyen;
		
		private EntityRef<ThuThu> _ThuThu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTKChanging(int value);
    partial void OnMaTKChanged();
    partial void OnTKChanging(string value);
    partial void OnTKChanged();
    partial void OnMKChanging(string value);
    partial void OnMKChanged();
    partial void OnMaTTChanging(string value);
    partial void OnMaTTChanged();
    partial void OnQuyenChanging(string value);
    partial void OnQuyenChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._ThuThu = default(EntityRef<ThuThu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTK
		{
			get
			{
				return this._MaTK;
			}
			set
			{
				if ((this._MaTK != value))
				{
					this.OnMaTKChanging(value);
					this.SendPropertyChanging();
					this._MaTK = value;
					this.SendPropertyChanged("MaTK");
					this.OnMaTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TK", DbType="NVarChar(50)")]
		public string TK
		{
			get
			{
				return this._TK;
			}
			set
			{
				if ((this._TK != value))
				{
					this.OnTKChanging(value);
					this.SendPropertyChanging();
					this._TK = value;
					this.SendPropertyChanged("TK");
					this.OnTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MK", DbType="VarChar(50)")]
		public string MK
		{
			get
			{
				return this._MK;
			}
			set
			{
				if ((this._MK != value))
				{
					this.OnMKChanging(value);
					this.SendPropertyChanging();
					this._MK = value;
					this.SendPropertyChanged("MK");
					this.OnMKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTT", DbType="NVarChar(30)")]
		public string MaTT
		{
			get
			{
				return this._MaTT;
			}
			set
			{
				if ((this._MaTT != value))
				{
					if (this._ThuThu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTTChanging(value);
					this.SendPropertyChanging();
					this._MaTT = value;
					this.SendPropertyChanged("MaTT");
					this.OnMaTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quyen", DbType="NVarChar(10)")]
		public string Quyen
		{
			get
			{
				return this._Quyen;
			}
			set
			{
				if ((this._Quyen != value))
				{
					this.OnQuyenChanging(value);
					this.SendPropertyChanging();
					this._Quyen = value;
					this.SendPropertyChanged("Quyen");
					this.OnQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuThu_TaiKhoan", Storage="_ThuThu", ThisKey="MaTT", OtherKey="MaTT", IsForeignKey=true, DeleteRule="CASCADE")]
		public ThuThu ThuThu
		{
			get
			{
				return this._ThuThu.Entity;
			}
			set
			{
				ThuThu previousValue = this._ThuThu.Entity;
				if (((previousValue != value) 
							|| (this._ThuThu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThuThu.Entity = null;
						previousValue.TaiKhoans.Remove(this);
					}
					this._ThuThu.Entity = value;
					if ((value != null))
					{
						value.TaiKhoans.Add(this);
						this._MaTT = value.MaTT;
					}
					else
					{
						this._MaTT = default(string);
					}
					this.SendPropertyChanged("ThuThu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.The")]
	public partial class The : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaThe;
		
		private System.Nullable<int> _MaDocGia;
		
		private System.Nullable<System.DateTime> _NgayCapThe;
		
		private System.Nullable<System.DateTime> _NgayHetHan;
		
		private string _MaTT;
		
		private EntitySet<PhieuMuon> _PhieuMuons;
		
		private EntitySet<PhieuTra> _PhieuTras;
		
		private EntityRef<DocGia> _DocGia;
		
		private EntityRef<ThuThu> _ThuThu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTheChanging(string value);
    partial void OnMaTheChanged();
    partial void OnMaDocGiaChanging(System.Nullable<int> value);
    partial void OnMaDocGiaChanged();
    partial void OnNgayCapTheChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapTheChanged();
    partial void OnNgayHetHanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayHetHanChanged();
    partial void OnMaTTChanging(string value);
    partial void OnMaTTChanged();
    #endregion
		
		public The()
		{
			this._PhieuMuons = new EntitySet<PhieuMuon>(new Action<PhieuMuon>(this.attach_PhieuMuons), new Action<PhieuMuon>(this.detach_PhieuMuons));
			this._PhieuTras = new EntitySet<PhieuTra>(new Action<PhieuTra>(this.attach_PhieuTras), new Action<PhieuTra>(this.detach_PhieuTras));
			this._DocGia = default(EntityRef<DocGia>);
			this._ThuThu = default(EntityRef<ThuThu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThe", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaThe
		{
			get
			{
				return this._MaThe;
			}
			set
			{
				if ((this._MaThe != value))
				{
					this.OnMaTheChanging(value);
					this.SendPropertyChanging();
					this._MaThe = value;
					this.SendPropertyChanged("MaThe");
					this.OnMaTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDocGia", DbType="Int")]
		public System.Nullable<int> MaDocGia
		{
			get
			{
				return this._MaDocGia;
			}
			set
			{
				if ((this._MaDocGia != value))
				{
					if (this._DocGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDocGiaChanging(value);
					this.SendPropertyChanging();
					this._MaDocGia = value;
					this.SendPropertyChanged("MaDocGia");
					this.OnMaDocGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapThe", DbType="Date")]
		public System.Nullable<System.DateTime> NgayCapThe
		{
			get
			{
				return this._NgayCapThe;
			}
			set
			{
				if ((this._NgayCapThe != value))
				{
					this.OnNgayCapTheChanging(value);
					this.SendPropertyChanging();
					this._NgayCapThe = value;
					this.SendPropertyChanged("NgayCapThe");
					this.OnNgayCapTheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHetHan", DbType="Date")]
		public System.Nullable<System.DateTime> NgayHetHan
		{
			get
			{
				return this._NgayHetHan;
			}
			set
			{
				if ((this._NgayHetHan != value))
				{
					this.OnNgayHetHanChanging(value);
					this.SendPropertyChanging();
					this._NgayHetHan = value;
					this.SendPropertyChanged("NgayHetHan");
					this.OnNgayHetHanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTT", DbType="NVarChar(30)")]
		public string MaTT
		{
			get
			{
				return this._MaTT;
			}
			set
			{
				if ((this._MaTT != value))
				{
					if (this._ThuThu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTTChanging(value);
					this.SendPropertyChanging();
					this._MaTT = value;
					this.SendPropertyChanged("MaTT");
					this.OnMaTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="The_PhieuMuon", Storage="_PhieuMuons", ThisKey="MaThe", OtherKey="MaThe")]
		public EntitySet<PhieuMuon> PhieuMuons
		{
			get
			{
				return this._PhieuMuons;
			}
			set
			{
				this._PhieuMuons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="The_PhieuTra", Storage="_PhieuTras", ThisKey="MaThe", OtherKey="MaThe")]
		public EntitySet<PhieuTra> PhieuTras
		{
			get
			{
				return this._PhieuTras;
			}
			set
			{
				this._PhieuTras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocGia_The", Storage="_DocGia", ThisKey="MaDocGia", OtherKey="MaDocGia", IsForeignKey=true, DeleteRule="CASCADE")]
		public DocGia DocGia
		{
			get
			{
				return this._DocGia.Entity;
			}
			set
			{
				DocGia previousValue = this._DocGia.Entity;
				if (((previousValue != value) 
							|| (this._DocGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocGia.Entity = null;
						previousValue.Thes.Remove(this);
					}
					this._DocGia.Entity = value;
					if ((value != null))
					{
						value.Thes.Add(this);
						this._MaDocGia = value.MaDocGia;
					}
					else
					{
						this._MaDocGia = default(Nullable<int>);
					}
					this.SendPropertyChanged("DocGia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuThu_The", Storage="_ThuThu", ThisKey="MaTT", OtherKey="MaTT", IsForeignKey=true, DeleteRule="CASCADE")]
		public ThuThu ThuThu
		{
			get
			{
				return this._ThuThu.Entity;
			}
			set
			{
				ThuThu previousValue = this._ThuThu.Entity;
				if (((previousValue != value) 
							|| (this._ThuThu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThuThu.Entity = null;
						previousValue.Thes.Remove(this);
					}
					this._ThuThu.Entity = value;
					if ((value != null))
					{
						value.Thes.Add(this);
						this._MaTT = value.MaTT;
					}
					else
					{
						this._MaTT = default(string);
					}
					this.SendPropertyChanged("ThuThu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuMuons(PhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.The = this;
		}
		
		private void detach_PhieuMuons(PhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.The = null;
		}
		
		private void attach_PhieuTras(PhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.The = this;
		}
		
		private void detach_PhieuTras(PhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.The = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TheLoai")]
	public partial class TheLoai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTheLoai;
		
		private string _TenLoai;
		
		private EntitySet<PhieuMuon> _PhieuMuons;
		
		private EntitySet<Sach> _Saches;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTheLoaiChanging(string value);
    partial void OnMaTheLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public TheLoai()
		{
			this._PhieuMuons = new EntitySet<PhieuMuon>(new Action<PhieuMuon>(this.attach_PhieuMuons), new Action<PhieuMuon>(this.detach_PhieuMuons));
			this._Saches = new EntitySet<Sach>(new Action<Sach>(this.attach_Saches), new Action<Sach>(this.detach_Saches));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTheLoai", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTheLoai
		{
			get
			{
				return this._MaTheLoai;
			}
			set
			{
				if ((this._MaTheLoai != value))
				{
					this.OnMaTheLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaTheLoai = value;
					this.SendPropertyChanged("MaTheLoai");
					this.OnMaTheLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_PhieuMuon", Storage="_PhieuMuons", ThisKey="MaTheLoai", OtherKey="MaTheLoai")]
		public EntitySet<PhieuMuon> PhieuMuons
		{
			get
			{
				return this._PhieuMuons;
			}
			set
			{
				this._PhieuMuons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoai_Sach", Storage="_Saches", ThisKey="MaTheLoai", OtherKey="MaTheLoai")]
		public EntitySet<Sach> Saches
		{
			get
			{
				return this._Saches;
			}
			set
			{
				this._Saches.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuMuons(PhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = this;
		}
		
		private void detach_PhieuMuons(PhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = null;
		}
		
		private void attach_Saches(Sach entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = this;
		}
		
		private void detach_Saches(Sach entity)
		{
			this.SendPropertyChanging();
			entity.TheLoai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThuThu")]
	public partial class ThuThu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTT;
		
		private string _Hoten;
		
		private string _GioiTinh;
		
		private string _DiaChi;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _SoDienThoai;
		
		private EntitySet<PhieuMuon> _PhieuMuons;
		
		private EntitySet<PhieuTra> _PhieuTras;
		
		private EntitySet<TaiKhoan> _TaiKhoans;
		
		private EntitySet<The> _Thes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTTChanging(string value);
    partial void OnMaTTChanged();
    partial void OnHotenChanging(string value);
    partial void OnHotenChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    #endregion
		
		public ThuThu()
		{
			this._PhieuMuons = new EntitySet<PhieuMuon>(new Action<PhieuMuon>(this.attach_PhieuMuons), new Action<PhieuMuon>(this.detach_PhieuMuons));
			this._PhieuTras = new EntitySet<PhieuTra>(new Action<PhieuTra>(this.attach_PhieuTras), new Action<PhieuTra>(this.detach_PhieuTras));
			this._TaiKhoans = new EntitySet<TaiKhoan>(new Action<TaiKhoan>(this.attach_TaiKhoans), new Action<TaiKhoan>(this.detach_TaiKhoans));
			this._Thes = new EntitySet<The>(new Action<The>(this.attach_Thes), new Action<The>(this.detach_Thes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTT", DbType="NVarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTT
		{
			get
			{
				return this._MaTT;
			}
			set
			{
				if ((this._MaTT != value))
				{
					this.OnMaTTChanging(value);
					this.SendPropertyChanging();
					this._MaTT = value;
					this.SendPropertyChanged("MaTT");
					this.OnMaTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hoten", DbType="NVarChar(255)")]
		public string Hoten
		{
			get
			{
				return this._Hoten;
			}
			set
			{
				if ((this._Hoten != value))
				{
					this.OnHotenChanging(value);
					this.SendPropertyChanging();
					this._Hoten = value;
					this.SendPropertyChanged("Hoten");
					this.OnHotenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(20)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuThu_PhieuMuon", Storage="_PhieuMuons", ThisKey="MaTT", OtherKey="MaTT")]
		public EntitySet<PhieuMuon> PhieuMuons
		{
			get
			{
				return this._PhieuMuons;
			}
			set
			{
				this._PhieuMuons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuThu_PhieuTra", Storage="_PhieuTras", ThisKey="MaTT", OtherKey="MaTT")]
		public EntitySet<PhieuTra> PhieuTras
		{
			get
			{
				return this._PhieuTras;
			}
			set
			{
				this._PhieuTras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuThu_TaiKhoan", Storage="_TaiKhoans", ThisKey="MaTT", OtherKey="MaTT")]
		public EntitySet<TaiKhoan> TaiKhoans
		{
			get
			{
				return this._TaiKhoans;
			}
			set
			{
				this._TaiKhoans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThuThu_The", Storage="_Thes", ThisKey="MaTT", OtherKey="MaTT")]
		public EntitySet<The> Thes
		{
			get
			{
				return this._Thes;
			}
			set
			{
				this._Thes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuMuons(PhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.ThuThu = this;
		}
		
		private void detach_PhieuMuons(PhieuMuon entity)
		{
			this.SendPropertyChanging();
			entity.ThuThu = null;
		}
		
		private void attach_PhieuTras(PhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.ThuThu = this;
		}
		
		private void detach_PhieuTras(PhieuTra entity)
		{
			this.SendPropertyChanging();
			entity.ThuThu = null;
		}
		
		private void attach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.ThuThu = this;
		}
		
		private void detach_TaiKhoans(TaiKhoan entity)
		{
			this.SendPropertyChanging();
			entity.ThuThu = null;
		}
		
		private void attach_Thes(The entity)
		{
			this.SendPropertyChanging();
			entity.ThuThu = this;
		}
		
		private void detach_Thes(The entity)
		{
			this.SendPropertyChanging();
			entity.ThuThu = null;
		}
	}
}
#pragma warning restore 1591
